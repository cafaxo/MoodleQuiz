{
    "docs": [
        {
            "location": "/", 
            "text": "MoodleQuiz Documentation\n\n\n\n\nMoodleQuiz Documentation\n\n\nTypes\n\n\nFunctions\n\n\nEnums\n\n\nIndex\n\n\n\n\n\n\n\n\n\n\nTypes\n\n\nThe main type of this module is \nQuiz\n, which contains all the information of a Moodle Quiz.\n\n\n#\n\n\nMoodleQuiz.Quiz\n \n \nType\n.\n\n\nQuiz(Questions::Vector{Question};Category::AbstractString=\n)\n\n\n\n\nCreates a \nQuiz\n consisting of the supplied \nQuestion\ns with the given category.\n\n\nSo essentially a \nQuiz\n is just a collection of \nQuestion\ns, which \nQuestion\n defined as follows.\n\n\n#\n\n\nMoodleQuiz.Question\n \n \nType\n.\n\n\nQuestion(type; optional arguments)\n\n\n\n\nContstructor for Question type using named parameters\n\n\nArguments\n\n\n\n\ntype::QuestionType\n             : see \nQustionType\n for possible options\n\n\nName::MoodleText=\"\"\n            : title of the question\n\n\nText::MoodleText=\"\"\n            : text containing the actual question\n\n\nGeneralFeedback::MoodleText=\"\"\n : this text is always shown after the question has been answered\n\n\nCorrectFeedback::MoodleText=\"Die Antwort ist richtig.\"\n : this text is shown after the question has been answered corectly\n\n\nPartiallyCorrectFeedback::MoodleText=\"Die Antwort ist teilweise richtig.\"\n : this text is shown after the question has been partially correctly answered.\n\n\nIncorrectFeedback::MoodleText=\"Die Antwort ist falsch.\"\n : this text is shown if the question has been answered incorrectly\n\n\nDefaultGrade::Int=1\n            : not sure ... probably points awarded if the question is answered correctly in the first attempt\n\n\nPenalty::Float32=1/3\n           : not sure ... probably the points awarded for a correct answer is calculated by \nDefaultGrade * Penalty\n if the student failed to provide the correct answer in the first attempt\n\n\nHidden::Int=0\n                  : not sure ... maybe hidden questions cannot be seen by students?\n\n\nSingle::Bool=true\n              : not sure ... not idea\n\n\nShuffleAnswers::Bool=true\n      : decides if answers of questions will be randomly shuffled by Moodle\n\n\nAnswerNumbering::String\n=\"none\" : decides how answers of questions should be labeled, e.g. 1. 2. ... or a),b) ... Labels are disabled by default.\n\n\nAnswers::Answer=[]\n             : \nAnswer\ns for this question\n\n\n\n\nA \nQuestion\n must have an \nArray\n of \nAnswer\ns.\n\n\n#\n\n\nMoodleQuiz.Answer\n \n \nType\n.\n\n\nAnswer(text; optional arguments)\n\n\n\n\nContstructor for Question type using named parameters\n\n\nArguments\n\n\n\n\nText::MoodleText=\"\"\n     : text containing the actual question\n\n\nCorrect::Int=1\n          : shortcut for setting wether this answer is correct or not\n\n\nFraction::Int=100\n       : \nFraction * Correct /100 * (DefaultGrade of Question)\n Points are awarded to the student if this answer is chosen\n\n\nFeedback::MoodleText=\"\"\n : this text is always shown after the question has been answered\n\n\n\n\n\n\nFunctions\n\n\n#\n\n\nMoodleQuiz.exportXML\n \n \nFunction\n.\n\n\nexportXML(quiz)\n\n\n\n\nreturns a string with the quiz in Moodle XML format\n\n\nexportXML(quiz,filename::AbstractString)\n\n\n\n\nwrites the quiz in Moodle XML format to the given file\n\n\n\n\nEnums\n\n\n#\n\n\nMoodleQuiz.QuestionType\n \n \nType\n.\n\n\nMoodle supports the following types of questions\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMultipleChoice\n\n\nstandard multiple choice question\n\n\n\n\n\n\nAllOrNothingMultipleChoice\n\n\nmultiple choice question, where all correct and no false answers have to be selected to recieve any points\n\n\n\n\n\n\nTrueFalse\n\n\nsimple yes / no question\n\n\n\n\n\n\nShortAnswer\n\n\nnot yet implemented\n\n\n\n\n\n\nMatching\n\n\nnot yet implemented\n\n\n\n\n\n\nCloze\n\n\nnot yet implemented\n\n\n\n\n\n\nEssay\n\n\nnot yet implemented\n\n\n\n\n\n\nNumerical\n\n\nnot yet implemented\n\n\n\n\n\n\nDescription\n\n\nnot yet implemented\n\n\n\n\n\n\nCalculatedSimple\n\n\nnot yet implemented\n\n\n\n\n\n\nDragAndDrop\n\n\nnot yet implemented\n\n\n\n\n\n\nDragAndDropMatch\n\n\nnot yet implemented\n\n\n\n\n\n\n\n\n#\n\n\nMoodleQuiz.MoodleTextFormat\n \n \nType\n.\n\n\nText in a moodle quiz can have one of the following formats\n\n\n\n\n\n\n\n\nFormat\n\n\nDescriction\n\n\n\n\n\n\n\n\n\n\nHtml\n\n\n\n\n\n\n\n\nMoodleAutoFormat\n\n\nsome keywords as e.g. true / false will be automatically translated to the language of the moodle user viewing the quiz\n\n\n\n\n\n\nPlainText\n\n\n\n\n\n\n\n\nMarkdown\n\n\n\n\n\n\n\n\n\n\n\n\nIndex\n\n\n\n\nMoodleQuiz.Answer\n\n\nMoodleQuiz.MoodleTextFormat\n\n\nMoodleQuiz.Question\n\n\nMoodleQuiz.QuestionType\n\n\nMoodleQuiz.Quiz\n\n\nMoodleQuiz.exportXML", 
            "title": "Home"
        }, 
        {
            "location": "/#moodlequiz-documentation", 
            "text": "MoodleQuiz Documentation  Types  Functions  Enums  Index", 
            "title": "MoodleQuiz Documentation"
        }, 
        {
            "location": "/#types", 
            "text": "The main type of this module is  Quiz , which contains all the information of a Moodle Quiz.  #  MoodleQuiz.Quiz     Type .  Quiz(Questions::Vector{Question};Category::AbstractString= )  Creates a  Quiz  consisting of the supplied  Question s with the given category.  So essentially a  Quiz  is just a collection of  Question s, which  Question  defined as follows.  #  MoodleQuiz.Question     Type .  Question(type; optional arguments)  Contstructor for Question type using named parameters  Arguments   type::QuestionType              : see  QustionType  for possible options  Name::MoodleText=\"\"             : title of the question  Text::MoodleText=\"\"             : text containing the actual question  GeneralFeedback::MoodleText=\"\"  : this text is always shown after the question has been answered  CorrectFeedback::MoodleText=\"Die Antwort ist richtig.\"  : this text is shown after the question has been answered corectly  PartiallyCorrectFeedback::MoodleText=\"Die Antwort ist teilweise richtig.\"  : this text is shown after the question has been partially correctly answered.  IncorrectFeedback::MoodleText=\"Die Antwort ist falsch.\"  : this text is shown if the question has been answered incorrectly  DefaultGrade::Int=1             : not sure ... probably points awarded if the question is answered correctly in the first attempt  Penalty::Float32=1/3            : not sure ... probably the points awarded for a correct answer is calculated by  DefaultGrade * Penalty  if the student failed to provide the correct answer in the first attempt  Hidden::Int=0                   : not sure ... maybe hidden questions cannot be seen by students?  Single::Bool=true               : not sure ... not idea  ShuffleAnswers::Bool=true       : decides if answers of questions will be randomly shuffled by Moodle  AnswerNumbering::String =\"none\" : decides how answers of questions should be labeled, e.g. 1. 2. ... or a),b) ... Labels are disabled by default.  Answers::Answer=[]              :  Answer s for this question   A  Question  must have an  Array  of  Answer s.  #  MoodleQuiz.Answer     Type .  Answer(text; optional arguments)  Contstructor for Question type using named parameters  Arguments   Text::MoodleText=\"\"      : text containing the actual question  Correct::Int=1           : shortcut for setting wether this answer is correct or not  Fraction::Int=100        :  Fraction * Correct /100 * (DefaultGrade of Question)  Points are awarded to the student if this answer is chosen  Feedback::MoodleText=\"\"  : this text is always shown after the question has been answered", 
            "title": "Types"
        }, 
        {
            "location": "/#functions", 
            "text": "#  MoodleQuiz.exportXML     Function .  exportXML(quiz)  returns a string with the quiz in Moodle XML format  exportXML(quiz,filename::AbstractString)  writes the quiz in Moodle XML format to the given file", 
            "title": "Functions"
        }, 
        {
            "location": "/#enums", 
            "text": "#  MoodleQuiz.QuestionType     Type .  Moodle supports the following types of questions     Type  Description      MultipleChoice  standard multiple choice question    AllOrNothingMultipleChoice  multiple choice question, where all correct and no false answers have to be selected to recieve any points    TrueFalse  simple yes / no question    ShortAnswer  not yet implemented    Matching  not yet implemented    Cloze  not yet implemented    Essay  not yet implemented    Numerical  not yet implemented    Description  not yet implemented    CalculatedSimple  not yet implemented    DragAndDrop  not yet implemented    DragAndDropMatch  not yet implemented     #  MoodleQuiz.MoodleTextFormat     Type .  Text in a moodle quiz can have one of the following formats     Format  Descriction      Html     MoodleAutoFormat  some keywords as e.g. true / false will be automatically translated to the language of the moodle user viewing the quiz    PlainText     Markdown", 
            "title": "Enums"
        }, 
        {
            "location": "/#index", 
            "text": "MoodleQuiz.Answer  MoodleQuiz.MoodleTextFormat  MoodleQuiz.Question  MoodleQuiz.QuestionType  MoodleQuiz.Quiz  MoodleQuiz.exportXML", 
            "title": "Index"
        }
    ]
}